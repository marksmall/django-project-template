name: GITHUB RELEASE

on:
  push:
    tags:
      - "v*" # Push events matching v*, e.g. v1.1.0

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Build Application
        run: |
          echo ${GITHUB_WORKSPACE}
          cd client
          yarn install
          yarn build # Check building client is still possible
          zip -r orbis-${{ github.ref }}.zip . -x ".git/*" "./client/node_modules/*" "./client/build/*"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./orbis-${{ github.ref }}.zip
          asset_name: orbis-${{ github.ref }}.zip
          asset_content_type: application/zip
